function S_Pointer(t_So, t_Offset, _bit)
	local function getRanges()
		local ranges = {}
		local t = gg.getRangesList('^/data/*.so*$')
		for i, v in pairs(t) do
			if v.type:sub(2, 2) == 'w' then
				table.insert(ranges, v)
			end
		end
		return ranges
	end
	local function Get_Address(N_So, Offset, ti_bit)
		local ti = gg.getTargetInfo()
		local S_list = getRanges()
		local t = {}
		local _t
		local _S = nil
		if ti_bit then
			_t = 32
		 else
			_t = 4
		end
		for i in pairs(S_list) do
			local _N = S_list[i].internalName:gsub('^.*/', '')
			if N_So[1] == _N and N_So[2] == S_list[i].state then
				_S = S_list[i]
				break
			end
		end
		if _S then
			t[#t + 1] = {}
			t[#t].address = _S.start + Offset[1]
			t[#t].flags = _t
			if #Offset ~= 1 then
				for i = 2, #Offset do
					local S = gg.getValues(t)
					t = {}
					for _ in pairs(S) do
						if not ti.x64 then
							S[_].value = S[_].value & 0xFFFFFFFF
						end
						t[#t + 1] = {}
						t[#t].address = S[_].value + Offset[i]
						t[#t].flags = _t
					end
				end
			end
			_S = t[#t].address
		end
		return _S
	end
	local _A = string.format('0x%X', Get_Address(t_So, t_Offset, _bit))
	return _A
end

gg.alert("功能要在大厅开,对局内开必拉闸和减伤")
function Main()
SN = gg.multiChoice({
"锁甲",
"锁头",
"退出辅助"
}, nil, "大厅开功能")
if SN == nil then
else
if SN[1] == true then
a1()
end
if SN[2] == true then
a2()
end
if SN[3] == true then
exit()
end
end

XGCK = -1
end

function a1()
local t = {"libGame.so:bss", "Cb"}  --前面的模块,后面的内存区域
local tt = {0xB6D58, 0x38, 0x0, 0x158, 0x18, 0x68, 0x24}  --这是扫出来的偏移量
local ttt = S_Pointer(t, tt,true)
gg.addListItems({{address = ttt, flags = 16, value = 0.8,freeze=true}})  --这是修改值,并冻结.
gg.toast("OK")
end

function a2()
local t = {"libGame.so:bss", "Cb"}  --前面的模块,后面的内存区域
local tt = {0xB6D58, 0x38, 0x0, 0xB0, 0x20, 0x38}  --这是扫出来的偏移量
local ttt = S_Pointer(t, tt,true)
gg.addListItems({{address = ttt, flags = 16, value = 0.3,freeze=true}})  --这是修改值,并冻结.
gg.toast("OK")
end

function exit()
print("欢迎下次光临")
os.exit()
end

cs = "111"
while true do
if gg.isVisible(true) then
XGCK = 1
gg.setVisible(false)
end
gg.clearResults()
if XGCK == 1 then
Main()
end
end
